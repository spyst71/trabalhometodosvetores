
import java.util.Scanner;

class Main {

  static Scanner console = new Scanner(System.in);

  static final int TOTAL_AVALIACOES = 4;
  static final String[] NOMES_AVALIACOES = { "A1", "A2", "A3","AI" };
  static final double[] NOTA_MAX_AVALIACOES = { 30.00, 30.00, 40.00, 30.00 };
  
  static double[] notas = new double [TOTAL_AVALIACOES];

  
  /**
	 * Ler uma nota do usuário
	 * @param mensagem O texto que aparecerá na tela
	 * @return um número double representando a nota.
	 */
  static double lerNota(String mensagem, double notaMaxima) {

      double nota = 0.0;

      do {

        System.out.printf("%s = ", mensagem);
        nota = console.nextDouble();
        
      } while (nota < 0.00 || nota > notaMaxima);

    return nota;
	}

  
  /**
  * Atualiza o valor da respectiva nota do estudante
  * @param indiceNota um número inteiro representando o índice (posição) da nota no vetor
  */
  static void atualizarNota(int indiceNota) {

    System.out.println();
    notas[indiceNota] = lerNota(NOMES_AVALIACOES[indiceNota], NOTA_MAX_AVALIACOES[indiceNota]);
  
  } // Fim do método atualizarNota

  
  /**
   * @param notaFinal A soma de todas as avalições feita pelo estudante ao longo do semestre
   * @return uma string representando o status final do estudante, são eles: APROVADO, REPROVADO, EM RECUPERAÇÃO.
   */
   static String avaliarSituacao(double notaFinal) {

     if(notaFinal < 30)
     	 return "REPROVADO";
     else if (notaFinal < 70)
       return "EM RECUPERAÇÃO";
     else
       return "APROVADO";
     
   } // Fim do método avaliarSituacao()
  
   /**
    * @param notaFinal A soma de todas as avalições feita pelo estudante ao longo do semestre para quem estava em recuperação
    * @return uma string representando o status final do estudante, são eles: APROVADO e REPROVADO.
    */
    static String avaliarSituacao2(double notaFinal) {

      if(notaFinal < 70)
      	 return "REPROVADO";   
      else
        return "APROVADO";
      
    } // Fim do método avaliarSituacao2()

  
  /**
  * Mostra na tela um relatório das notas do estudante
  */
  static void mostrarNotas() {

    double notaFinal = 0.0;

  
    System.out.println("\n\t\tNOTAS");
    System.out.println();

    for (int i = 0; i < TOTAL_AVALIACOES-1; i++) {

      System.out.printf("Avaliação %s = %.2f pts", NOMES_AVALIACOES[i], notas[i]);
      System.out.println();
      notaFinal += notas[i];
    
    }
    
    System.out.printf("\n  Nota Final = %.2f pts", notaFinal);
    System.out.printf("\n    Situação = %s", avaliarSituacao(notaFinal));
    System.out.printf("\n  Media Final = %.2f pts", calcularMedia(notas));
    System.out.printf("\n    Maior Nota = %s", maiorNota(notas));

    String situacao = avaliarSituacao(notaFinal);
    if (situacao == "EM RECUPERAÇÃO")  {
    	processoRecuperacao();
    	notaFinal = 0.00;
    	 for (int i = 0; i < TOTAL_AVALIACOES-1; i++) {

    	      System.out.printf("Avaliação %s = %.2f pts", NOMES_AVALIACOES[i], notas[i]);
    	      System.out.println();
    	      notaFinal += notas[i];
    	    
    	    }
    	 System.out.printf("\n    ALUNO TEVE RECUPERAÇÃO"); 
    	System.out.printf("\n    Situação = %s", avaliarSituacao2(notaFinal));
    	
    }

  } // Fim do método mostrarNotas()

  /**
   * Método para notas Quando aluno está em recuperação 
   */
  
   static void processoRecuperacao()
  {
    	System.out.printf("\n  Aluno EM RECUPERAÇÃO. Digite a Nota de AI");    
    	atualizarNota(3);
    	if (notas[0] > notas[1])
    		notas[1] = notas[3];
    	else
    		notas[0] = notas[3];
	 
  }
   
   /**
    * Método para calcular média
    */ 
   
  static double calcularMedia(double[] notas)
  {
	 double media = 0.00;
	 double somanotas = 0.00;
	  for (int i = 0; i < TOTAL_AVALIACOES-1; i++) {
	     
		  somanotas += notas[i]; 
	  }   
	  media = somanotas / (TOTAL_AVALIACOES-1);
	 return media;
  }

  /**
   * Método para maior nota
   */ 

  static String maiorNota(double[] notas)
  {
	 double maiordasnotas = notas[0];
	 String maior = NOMES_AVALIACOES[0];
	 
	 for (int i = 1; i < TOTAL_AVALIACOES-1; i++) {
	     if (notas[i] > maiordasnotas) {
	    	 maiordasnotas = notas[i];
	    	 maior = NOMES_AVALIACOES[i];
	     }
	  }   

	 return maior;
  }
  
 /**
  * Exibe o menu principal da aplicação
  */
  
  static void mostrarMenu() {

	    System.out.println("\n\n");
	    System.out.println("\t\tMENU");
	    System.out.println();
	    
	    System.out.println("[1] Cadastrar Notas A1");
	    System.out.println("[2] Cadastrar Nota A2");
	    System.out.println("[3] Cadastrar Nota A3");
	    System.out.println("[4] Mostrar Notas");
	    System.out.println("[0] SAIR");

	    System.out.print("\nDigite uma opção:  ");
	    byte opcao = console.nextByte();


	    switch(opcao) {

	      case 0:
	        System.exit(0);
	        break;
	      
	      case 1:
	        atualizarNota(0);
	        break;
	      
	      case 2:
	        atualizarNota(1);
	        break;

	      case 3:
	        atualizarNota(2);
	        break;

	      case 4:
	        mostrarNotas();
	        break;
	        
	      default:
	          mostrarMenu();
	          break;

	      }

	      mostrarMenu();

	    } // Fim do método mostrarMenu()

	    
	    public static void main(String[] args) {
	      
	      mostrarMenu();
	    
	    } // Fim do método main();
	    
	  } // Fim da classe Main
